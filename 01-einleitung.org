#+TITLE: 01 - Einleitung
#+INCLUDE: export-prologue.org
#+PROPERTY: header-args:latex :tangle yes :noweb yes :tangle-macros yes :tangle-prologue topic :tangle-epilogue endtopic :exports none

#+NAME: topic
#+BEGIN_SRC latex :tangle no
\psuSectionStart{{{{property(ITEM)}}}}
#+END_SRC

#+NAME: endtopic
#+BEGIN_SRC latex :tangle no
\psuSectionStop{{{{property(ITEM)}}}}{{{{range()}}}}
#+END_SRC

#+BEGIN_SRC latex :tangle-prologue nil :tangle-epilogue nil
\subtitle{{{{title()}}}}
\begin{frame}
  \maketitle
\end{frame}
\psuSectionStop{Titlepage}{{{{range()}}}}
#+END_SRC

* Gedanken zu dieser Vorlesungseinheit                             :noexport:
Mit der ersten Vorlesung, soll der Studierene für die Vorlesung
motiviert werden. Es soll verstehen, welcher ganz konkreten
Erkenntnisgewinn daraus gezogen werden kann sich mit
Programmiersprachen und deren Implementierungen zu beschäftigen. Ihm
muss klar werden, dass er hier zukunftssicheres Wissen erlangt.

- Was muss der Studierende wissen um eine neue Programmiersprache
  effektiv und effizient ein zu setzen?

  - Welche Abstraktion bietet eine Programmiersprache an und was hat dies mit dem Ebenenmodell zu tun?

  - Was ist der Unterschied zwischen einem Interpreter und einem Übersetzer?

  - Was darf ein Übersetzer und was darf dieser nicht?


* Motivation

#+BEGIN_SRC latex
  \begin{frame}{Der Dozent}
    \bi
    \ii Wer ist der Dozent da?\\{
      Informatikstudium in Erlangen (ab 2009), Promotion in Hannover (2019)\\
      Betriebssysteme, Emacs User, Schwäche für Graphdatenstrukturen
    }\qquad
    \ii Ich mag Programmiersprachen! {
      \bi
      \ii Sie erleichtern mir Lösungen klar und deutlich aufzuschreiben.
      \ii Sowohl eleganter als auch zu komplexer Code ist Kunst.
      \ei
    }\qquad\qquad
    \ii<2-> Dies ist meine erste eigene Vorlesung. {
      \bi
      \ii Wir müssen das jetzt gemeinsam durchstehen.
      \ii Ich werde mein Bestes geben ihnen nur Sinnvolles zu vermitteln.
      \ii Melden sie sich mit Fehlern, Kritik und Anregungen.
      \ei
    }
    \ei
  \end{frame}
#+END_SRC

#+BEGIN_SRC latex
  \begin{frame}{Was soll diese Veranstaltung leisten?}
  \bi
  \ii<+-> Informatiker werden fortwährend mit neuen Sprache konfrontiert. {
    \bi
    \ii The next 700 programming languages, P. J. Landin\only<2->{, 1966}
    \ei
  }
  \ii<+-> Anforderung: Schnell \alert{effektive} und \alert{effiziente} entwickeln.
  \ii Mein Ziel: Ich muss ihnen das nötige Handwerkszeug geben, damit
    sie möglichst schnell dazu kommen effektiv und effizent Programme
    in einer neuen Sprache zu entwickeln.
  \ei
  \end{frame}

  \begin{frame}{Wieso ist das überhaupt möglich?}
  \end{frame}
#+END_SRC


- Folie: Was soll diese Veranstaltung leisten?
  - Jeder Informatiker wird fortwährend mit neuen Programmiersprachen konfrontiert
  - Darin gilt es möglichst schnell zu einer guten Lösung zu kommen
  - Mein Ziel: Ich muss ihnen das nötige Handwerkszeug geben, damit
    sie möglichst schnell dazu kommen effektiv und effizent Programme
    in einer neuen Sprache zu entwickeln.

- Folie: Wieso ist das überhaupt möglich?
  - Informatiker denken sich Sprachen aus, damit andere Informatiker einer Maschiene erklären können was zu tun ist.
  - Viel an Ingeneursleistung ist die Rekombination von bekannten
    Konzepten, oder "Was der Bauer nicht kennt, implementiert er auch
    nicht in seinem Übersetzer"
  - Wenn sie lernen wie ein Sprachenentwickler zu denken, so erlernen sie neue Sprachen schneller.
  - Ihr Gewinn: Demystifizierung der Übersetzer Blackbox.

- Folie: Welchen Inhalt hat diese Veranstaltung?
  - Programmiersprachen
    - Kernkonzepte die sich in vielen Sprachen wiederfinden
    - High-Level Paradigmen (funktional, OO), die sich daraus zusammensetzen
    - Wir werden uns verschiedenste Programmiersprachen anschauen

  - Übersetzer
    - Zwischenschritte vom Zeichenstrom zum Assemblerprogram
    - Nötige Datenstrukturen und Algorithmen
    - Praktische Arbeit an einem einfachen Übersetzer

* Abstrakte Maschienen

* Struktur der Veranstaltung


* Organisatorisches

* Epilogue                                                         :noexport:

* Footnotes


# Local Variables:
# org-html-htmlize-output-type: css
# org-html-htmlize-font-prefix: "org-"
# org-html-klipsify-src: t
# End:
