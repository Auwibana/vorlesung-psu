#+TITLE: Programmiersprachen und Übersetzer
#+INCLUDE: export-prologue.org
#+OPTIONS: toc:nil num:nil
#+MACRO: headlines (eval (org-macro-headlines $1))


* <2020-04-14> [[file:01-einleitung.org][Einleitung]]

Abschnitte: {{{headlines(./01-einleitung.org)}}}

* [[file:02-syntax.org][Übersetzer: Syntax, Lexen und Parsen]]

Abschnitte: {{{headlines(./02-syntax.org)}}}

* [[file:03-typen.org][Sprachen: Typen]]

Abschnitte: {{{headlines(./03-typen.org)}}}

* [[file:04-namen.org][Sprachen: Namen]]
Abschnitte: {{{headlines(./04-namen.org)}}}

* COMMENT [[file:05-semantische-analyse.org][Übersetzer: Semantische Analyse]]

* COMMENT [[06-objekte.org][Sprachen: Objekte]]

   - Sprachen: Objekte
     - Data Abstraction, Objekterzeugung, Lebenszeiten, Ownership, Initialisierung, Mixins, Prototype-Inheritance,
   - Sprachen: Operationen
     - Standardkonstrukte
     - Auswertungsstrategie
     - Call-By-*
     - Seiteneffekte
     - Verhaltenskomposition
     - Verhaltensableitung
   - Übersetzer: Intermediate Code Generierung
     - 3-Address Code, Basic Blocks, Control-Fluss Graph, R-Values, L-Values

   - Übersetzer: Optimierung
     - Fixpunkt Analyse
     - Konstantenfortschreibung, Konstantenfolding
     - Dead Code Elimination
     - Tail-Call Optimization
   - Übersetzer: Machienencodegenerierung
     - Registerallokation, Funktionsaufrufe, ABI, Peephole Optimizer
   - Übersetzer: Das Run-Time Environment
     - ELF und Dynamische Libraries, Garbage Colletion, Just-in-Time Compilation

   - Sprachen: Das Objektorientierte Paradigma
     - SOLID
     - https://de.wikipedia.org/wiki/Prinzipien_objektorientierten_Designs

   - Sprachen: Das Funktionale Paradigma
     - Freiheit von Seiteneffekten
     - Parametrische Datentypen
     - Unifikation von Generischen Datentypen


Was wir nicht machen:
  - Logische Programmierung (z.B. Prolog)
  - Parallele Programmierung
  - Parsingtheorie in Detail
