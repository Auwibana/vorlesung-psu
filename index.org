#+TITLE: Programmiersprachen und Übersetzer
#+INCLUDE: export-prologue.org
#+OPTIONS: toc:nil
#+MACRO: headlines (eval (org-macro-headlines $1))


* [[file:01-einleitung.org][01 - Einleitung]

Abschnitte: {{{headlines(./01-einleitung.org)}}}

* 02 - Übersetzer: Lexen und Parsen

   - Tokenstrom, (Kontextfreie) Gramatiken, Abstrakter Syntaxbaum, Parsertechniken, Parsergeneratoren

3. Sprachen: Typen
   - Primitiv, Strukturierte und Unstrukturierte Komposition, Funktionstypen, Typableitungen, Typschablonen, Kompatibilität
4. Sprachen: Namen
   - Scoping, Statische und Dynamische Bindung, Type-directed Name Resolution, Overloading, Static and Dynamic Dispatch
   - Brujin Indices + Lexical Depth
5. Übersetzer: Semantische Analyse und Source-to-Source Transformation
   - Typprüfung, Namensauflösung, Fehlermeldungen
   - C-Präprozessor/M4, Hygenische Macros, Transpilation, Domain Specific Languages

6. Sprachen: Objekte
   - Data Abstraction, Objekterzeugung, Lebenszeiten, Ownership, Initialisierung, Mixins, Prototype-Inheritance,
7. Sprachen: Operationen
   - Standardkonstrukte
   - Auswertungsstrategie
   - Call-By-*
   - Seiteneffekte
   - Verhaltenskomposition
   - Verhaltensableitung
8. Übersetzer: Intermediate Code Generierung
   - 3-Address Code, Basic Blocks, Control-Fluss Graph, R-Values, L-Values

9. Übersetzer: Optimierung
   - Fixpunkt Analyse
   - Konstantenfortschreibung, Konstantenfolding
   - Dead Code Elimination
   - Tail-Call Optimization
10. Übersetzer: Machienencodegenerierung
    - Registerallokation, Funktionsaufrufe, ABI, Peephole Optimizer
11. Übersetzer: Das Run-Time Environment
    - ELF und Dynamische Libraries, Garbage Colletion, Just-in-Time Compilation

12. Sprachen: Das Objektorientierte Paradigma
    - SOLID
    - https://de.wikipedia.org/wiki/Prinzipien_objektorientierten_Designs

13. Sprachen: Das Funktionale Paradigma
    - Freiheit von Seiteneffekten
    - Parametrische Datentypen
    - Unifikation von Generischen Datentypen


Was wir nicht machen:
  - Logische Programmierung (z.B. Prolog)
  - Parallele Programmierung
  - Parsingtheorie in Detail
